[
  {
    "name": "dbLoginWithOAuth",
    "filePath": "app/actions/authorizeActions.jsx",
    "lines": [
      {
        "lineNumber": 31,
        "line": "/**\r"
      },
      {
        "lineNumber": 32,
        "line": " * Login user with OAuth\r"
      },
      {
        "lineNumber": 33,
        "line": " * @param {string} type \r"
      },
      {
        "lineNumber": 34,
        "line": " */\r"
      },
      {
        "lineNumber": 35,
        "line": "export var dbLoginWithOAuth = (provider) => {\r"
      }
    ],
    "codeParams": [
      "provider"
    ],
    "docParams": [
      "type"
    ]
  },
  {
    "name": "dbResetPassword",
    "filePath": "app/actions/authorizeActions.jsx",
    "lines": [
      {
        "lineNumber": 130,
        "line": "/**\r"
      },
      {
        "lineNumber": 131,
        "line": " * Reset user's password\r"
      },
      {
        "lineNumber": 132,
        "line": " * @param {string} newPassword\r"
      },
      {
        "lineNumber": 133,
        "line": " */\r"
      },
      {
        "lineNumber": 134,
        "line": "export const dbResetPassword = (email) => {\r"
      }
    ],
    "codeParams": [
      "email"
    ],
    "docParams": [
      "newPassword"
    ]
  },
  {
    "name": "dbUpdateComment",
    "filePath": "app/actions/commentActions.jsx",
    "lines": [
      {
        "lineNumber": 121,
        "line": "/**\r"
      },
      {
        "lineNumber": 122,
        "line": " * Update a comment from database\r"
      },
      {
        "lineNumber": 123,
        "line": " * @param  {string} id of comment\r"
      },
      {
        "lineNumber": 124,
        "line": " * @param {string} postId is the identifier of the post which comment belong to\r"
      },
      {
        "lineNumber": 125,
        "line": " */\r"
      },
      {
        "lineNumber": 126,
        "line": "export const dbUpdateComment = (id, postId, text) => {\r"
      }
    ],
    "codeParams": [
      "id",
      "postId",
      "text"
    ],
    "docParams": [
      "id",
      "postId"
    ]
  },
  {
    "name": "defaultDataDisable",
    "filePath": "app/actions/globalActions.jsx",
    "lines": [
      {
        "lineNumber": 26,
        "line": "/**\r"
      },
      {
        "lineNumber": 27,
        "line": " * Default data loaded status will be false\r"
      },
      {
        "lineNumber": 28,
        "line": " * @param {boolean} status \r"
      },
      {
        "lineNumber": 29,
        "line": " */\r"
      },
      {
        "lineNumber": 30,
        "line": "export const defaultDataDisable = () => {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "status"
    ]
  },
  {
    "name": "dbSaveImage",
    "filePath": "app/actions/imageGalleryActions.jsx",
    "lines": [
      {
        "lineNumber": 51,
        "line": "/**\r"
      },
      {
        "lineNumber": 52,
        "line": " * Save image URL in the server\r"
      },
      {
        "lineNumber": 53,
        "line": " * @param  {string} imageURL is the URL of image\r"
      },
      {
        "lineNumber": 54,
        "line": " */\r"
      },
      {
        "lineNumber": 55,
        "line": "export const dbSaveImage = (imageURL, imageFullPath) => {\r"
      }
    ],
    "codeParams": [
      "imageURL",
      "imageFullPath"
    ],
    "docParams": [
      "imageURL"
    ]
  },
  {
    "name": "addNotify",
    "filePath": "app/actions/notifyActions.jsx",
    "lines": [
      {
        "lineNumber": 103,
        "line": "/**\r"
      },
      {
        "lineNumber": 104,
        "line": " * Add notificaition \r"
      },
      {
        "lineNumber": 105,
        "line": " * @param {object} data  \r"
      },
      {
        "lineNumber": 106,
        "line": " */\r"
      },
      {
        "lineNumber": 107,
        "line": "export const addNotify = () => {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "addImagePost",
    "filePath": "app/actions/postActions.jsx",
    "lines": [
      {
        "lineNumber": 403,
        "line": "/**\r"
      },
      {
        "lineNumber": 404,
        "line": " * Add a post with image\r"
      },
      {
        "lineNumber": 405,
        "line": " * @param {object} post \r"
      },
      {
        "lineNumber": 406,
        "line": " */\r"
      },
      {
        "lineNumber": 407,
        "line": "export const addImagePost = (uid, post) => {\r"
      }
    ],
    "codeParams": [
      "uid",
      "post"
    ],
    "docParams": [
      "post"
    ]
  },
  {
    "name": "dbGetUserInfoByUserId",
    "filePath": "app/actions/userActions.jsx",
    "lines": [
      {
        "lineNumber": 33,
        "line": "/**\r"
      },
      {
        "lineNumber": 34,
        "line": " *  Get user info from database\r"
      },
      {
        "lineNumber": 35,
        "line": " * @param {string} uid \r"
      },
      {
        "lineNumber": 36,
        "line": " */\r"
      },
      {
        "lineNumber": 37,
        "line": "export const dbGetUserInfoByUserId = (uid, sw) => {\r"
      }
    ],
    "codeParams": [
      "uid",
      "sw"
    ],
    "docParams": [
      "uid"
    ]
  },
  {
    "name": "dbAddVote",
    "filePath": "app/actions/voteActions.jsx",
    "lines": [
      {
        "lineNumber": 13,
        "line": "/**\r"
      },
      {
        "lineNumber": 14,
        "line": " *  Add vote to database\r"
      },
      {
        "lineNumber": 15,
        "line": " * @param  {string} postId is the identifier of the post which user vote\r"
      },
      {
        "lineNumber": 16,
        "line": " */\r"
      },
      {
        "lineNumber": 17,
        "line": "export const dbAddVote = (postId, ownerPostUserId) => {\r"
      }
    ],
    "codeParams": [
      "postId",
      "ownerPostUserId"
    ],
    "docParams": [
      "postId"
    ]
  },
  {
    "name": "dbDeleteVote",
    "filePath": "app/actions/voteActions.jsx",
    "lines": [
      {
        "lineNumber": 61,
        "line": "/**\r"
      },
      {
        "lineNumber": 62,
        "line": " * Delete a vote from database\r"
      },
      {
        "lineNumber": 63,
        "line": " * @param  {string} id of vote\r"
      },
      {
        "lineNumber": 64,
        "line": " * @param {string} postId is the identifier of the post which vote belong to\r"
      },
      {
        "lineNumber": 65,
        "line": " */\r"
      },
      {
        "lineNumber": 66,
        "line": "export const dbDeleteVote = (postId) => {\r"
      }
    ],
    "codeParams": [
      "postId"
    ],
    "docParams": [
      "id",
      "postId"
    ]
  },
  {
    "name": "uploadImage",
    "filePath": "app/api/FileAPI.jsx",
    "lines": [
      {
        "lineNumber": 18,
        "line": "/**\r"
      },
      {
        "lineNumber": 19,
        "line": " * Upload image on the server\r"
      },
      {
        "lineNumber": 20,
        "line": " * @param {file} file \r"
      },
      {
        "lineNumber": 21,
        "line": " * @param {string} fileName \r"
      },
      {
        "lineNumber": 22,
        "line": " */\r"
      },
      {
        "lineNumber": 23,
        "line": "const uploadImage = (file, fileName, progress) => {\r"
      }
    ],
    "codeParams": [
      "file",
      "fileName",
      "progress"
    ],
    "docParams": [
      "file",
      "fileName"
    ]
  },
  {
    "name": "constraintImage",
    "filePath": "app/api/FileAPI.jsx",
    "lines": [
      {
        "lineNumber": 50,
        "line": "/**\r"
      },
      {
        "lineNumber": 51,
        "line": " * Constraint image size\r"
      },
      {
        "lineNumber": 52,
        "line": " * @param {file} file \r"
      },
      {
        "lineNumber": 53,
        "line": " * @param {number} maxWidth \r"
      },
      {
        "lineNumber": 54,
        "line": " * @param {number} maxHeight \r"
      },
      {
        "lineNumber": 55,
        "line": " */\r"
      },
      {
        "lineNumber": 56,
        "line": "const constraintImage = (file, fileName, maxWidth, maxHeight) => {\r"
      }
    ],
    "codeParams": [
      "file",
      "fileName",
      "maxWidth",
      "maxHeight"
    ],
    "docParams": [
      "file",
      "maxWidth",
      "maxHeight"
    ]
  },
  {
    "name": "mapStateToProps",
    "filePath": "app/components/CommentList.jsx",
    "lines": [
      {
        "lineNumber": 61,
        "line": "/**\r"
      },
      {
        "lineNumber": 62,
        "line": " * Map state to props\r"
      },
      {
        "lineNumber": 63,
        "line": " * @param  {object} state is the obeject from redux store\r"
      },
      {
        "lineNumber": 64,
        "line": " * @param  {object} ownProps is the props belong to component\r"
      },
      {
        "lineNumber": 65,
        "line": " * @return {object}          props of component\r"
      },
      {
        "lineNumber": 66,
        "line": " */\r"
      },
      {
        "lineNumber": 67,
        "line": "const mapStateToProps = (state) => {\r"
      }
    ],
    "codeParams": [
      "state"
    ],
    "docParams": [
      "state",
      "ownProps"
    ]
  },
  {
    "name": "ImageGallery#render",
    "filePath": "app/components/ImageGallery.jsx",
    "lines": [
      {
        "lineNumber": 102,
        "line": "    /**\r"
      },
      {
        "lineNumber": 103,
        "line": "     * When the post text changed\r"
      },
      {
        "lineNumber": 104,
        "line": "     * @param  {event} evt is an event passed by change post text callback funciton\r"
      },
      {
        "lineNumber": 105,
        "line": "     * @param  {string} data is the post content which user writes\r"
      },
      {
        "lineNumber": 106,
        "line": "     */\r"
      },
      {
        "lineNumber": 107,
        "line": "    render() {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "evt",
      "data"
    ]
  },
  {
    "name": "mapStateToProps",
    "filePath": "app/components/ImageGallery.jsx",
    "lines": [
      {
        "lineNumber": 173,
        "line": "/**\r"
      },
      {
        "lineNumber": 174,
        "line": " * Map state to props\r"
      },
      {
        "lineNumber": 175,
        "line": " * @param  {object} state is the obeject from redux store\r"
      },
      {
        "lineNumber": 176,
        "line": " * @param  {object} ownProps is the props belong to component\r"
      },
      {
        "lineNumber": 177,
        "line": " * @return {object}          props of component\r"
      },
      {
        "lineNumber": 178,
        "line": " */\r"
      },
      {
        "lineNumber": 179,
        "line": "const mapStateToProps = (state) => {\r"
      }
    ],
    "codeParams": [
      "state"
    ],
    "docParams": [
      "state",
      "ownProps"
    ]
  }
]